
class CcsAcromagatInstance

  abstract
    actors : Seq [String]
    resources : Seq [String]
    outcome : Seq [Tuple2 [String] [String] ]
    actor_children_map : Map [Actor] [Measure]
    actor_adults_map : Map [Actor] [Measure]
    actor_income_map : Map [Actor] [Measure]
    resource_value_map : Map [Resource] [Measure]
    pipelines : Seq [String]

  _add_value_to (value : Int) (m : Measure) : Measure =
    match m
      case Some (other_value) ==> Some (value + other_value)
      case None ==> None

  measure_sum (a : Measure) (b : Measure) : Measure =
    match a
      case Some (value) ==> _add_value_to (value) (b)
      case None ==> None

  get_or_else [A : Type] (map : Map [A] [Measure] ) (key : A) (default : Measure) : Measure =
    match map .get (key)
      case Some (value) ==> value
      case None ==> default

  actor_children (actor : Actor) : Measure =
    get_or_else [Actor] (actor_children_map) (actor) (Some (-1) )

  actor_adults (actor : Actor) : Measure =
    get_or_else [Actor] (actor_adults_map) (actor) (Some (-1) )

  actor_income (actor : Actor) : Measure =
    get_or_else [Actor] (actor_income_map) (actor) (Some (-1) )

  resource_value (resource : Resource) : Measure =
    get_or_else [Resource] (resource_value_map) (resource) (Some (-1) )

  context = "ChildCareSubsidy"

end

