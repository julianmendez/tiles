
class CcsAcromagatInstance

  abstract
    agents : Seq [Agent]
    resources : Seq [Resource]
    outcome : Outcome
    agent_children_map : Map [Agent] [Measure]
    agent_adults_map : Map [Agent] [Measure]
    agent_income_map : Map [Agent] [Measure]
    resource_value_map : Map [Resource] [Measure]
    pipelines : Seq [String]

  _add_value_to (value : Int) (m : Measure) : Measure =
    match m
      case Some (other_value) ==> Some (value + other_value)
      case None ==> None

  measure_sum (a : Measure) (b : Measure) : Measure =
    match a
      case Some (value) ==> _add_value_to (value) (b)
      case None ==> None

  get_or_else [A : Type] (map : Map [A] [Measure] ) (key : A) (default : Measure) : Measure =
    match map .get (key)
      case Some (value) ==> value
      case None ==> default

  agent_children (agent : Agent) : Measure =
    get_or_else [Agent] (agent_children_map) (agent) (Some (-1) )

  agent_adults (agent : Agent) : Measure =
    get_or_else [Agent] (agent_adults_map) (agent) (Some (-1) )

  agent_income (agent : Agent) : Measure =
    get_or_else [Agent] (agent_income_map) (agent) (Some (-1) )

  resource_value (resource : Resource) : Measure =
    get_or_else [Resource] (resource_value_map) (resource) (Some (-1) )

  context = "ChildCareSubsidy"

  initial_message : TileMessage [Boolean] =
    TileMessageBuilder .mk .build (context) (outcome) (true)

end

