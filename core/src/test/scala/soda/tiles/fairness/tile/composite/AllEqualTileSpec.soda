
class AllEqualTileSpec ()
  extends
    AnyFunSuite

  check [A : Type] (obtained : A) (expected : A) : org.scalatest.compatible.Assertion =
    assert(obtained == expected)

  scenario = ScenarioExample.mk

  mk_tile_message (seq : Seq [Measure] ) : TileMessage[Seq[Measure]] =
    TileMessageBuilder
      .mk
      .build (scenario.context) (scenario.outcome1) (seq)

  all_equal_tile = AllEqualTile.mk

  test ("all equal on empty sequence returns true") (
    check (
      obtained := all_equal_tile
        .apply (mk_tile_message (Seq [Measure] () ) )
        .contents
    ) (
      expected := true
    )
  )

  test ("all equal on single measure returns true") (
    check (
      obtained := all_equal_tile
        .apply (mk_tile_message (Seq [Measure] (Some (42) ) ) )
        .contents
    ) (
      expected := true
    )
  )

  test ("all equal on identical measures returns true") (
    check (
      obtained := all_equal_tile
        .apply (mk_tile_message (Seq [Measure] (Some (10) , Some (10) , Some (10) ) ) )
        .contents
    ) (
      expected := true
    )
  )

  test ("all equal on differing measures returns false") (
    check (
      obtained := all_equal_tile
        .apply (mk_tile_message (Seq [Measure] (Some (5) , Some (10) ) ) )
        .contents
    ) (
      expected := false
    )
  )

end
