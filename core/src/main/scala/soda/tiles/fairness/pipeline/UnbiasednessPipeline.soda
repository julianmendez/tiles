
directive lean
import Soda.tiles.fairness.tool.TileMessage
import Soda.tiles.fairness.tile.composite.AllAgentTripleTile
import Soda.tiles.fairness.tile.CorrelationTile
import Soda.tiles.fairness.tile.DecisionTile
import Soda.tiles.fairness.tile.FalsePosTile
import Soda.tiles.fairness.tile.PredictionPTile
import Soda.tiles.fairness.tile.UnzipTripleFstTile
import Soda.tiles.fairness.tile.UnzipTripleSndTile
import Soda.tiles.fairness.tile.UnzipTripleTrdTile
import Soda.tiles.fairness.tile.WithPTile

/**
 * This pipeline measures the bias in a given scenario by contrasting
 * false positives and those with a protected attribute.
 */

class UnbiasednessPipeline

  abstract
    positive_value : Resource
    result_function : Agent -> Resource
    with_p : Agent -> Boolean

  all_agent_map_ground_truth_tile = AllAgentMapGroundTruthTile .mk (with_p)

  all_agent_map_false_positive_tile = AllAgentMapFalsePositiveTile .mk (positive_value) (result_function)

  correlation_tile = CorrelationTile .mk

  apply (message : TileMessage [Boolean] ) : TileMessage [Measure] =
    correlation_tile .apply (
      all_agent_map_false_positive_tile .apply (
        message
      )
    ) (
      all_agent_map_ground_truth_tile .apply (
        message
      )
    )

end

