
directive lean
import Soda.tiles.fairness.tool.TileMessage


/**
 * This tile takes two sequences of measures as input, and returns a sequence such that,
 * for each pair (m0, m1) in the input, is m = sigma (m0, m1), where sigma is a given function
 * to combine measures.
 */

class ZipSigmaTile

  abstract
    sigma : Measure -> Measure -> Measure

  zip_tile = ZipPairTile .mk

  sigma_tile = SigmaTile .mk (sigma)

  apply (message0 : TileMessage [Seq [Measure] ] ) (message1 : TileMessage [Seq [Measure] ] )
      : TileMessage [Seq [Measure] ] =
    sigma_tile .apply (
      zip_tile .apply (message0) (message1)
    )

end

