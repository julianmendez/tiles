
directive lean
import Soda.tiles.fairness.tool.TileMessage

/**
 * This takes a sequence, a starting value, and a function, then processes the sequence from left to right,
 * adding elements into a single result step by step.
 */

class SumPhiTile [A : Type]

  abstract
    phi : A -> Measure

  zero : Measure = MeasureMod .mk .zero

  combine (acc : Measure) (elem : A) : Measure =
    MeasureMod .mk .plus (acc) (phi (elem) )

  fold_tile = FoldTile .mk (zero) (combine)

  apply (message : TileMessage [Seq [A] ] ) : TileMessage [Measure] =
    fold_tile
      .apply (message)

end

