
directive lean
import Soda.tiles.fairness.tool.TileMessage


/**
 * This tile takes a sequence of pairs (a, b), and returns a sequence with the first
 * component of each pair from the input.
 */

class UnzipPairFstTile

  abstract

  apply [A : Type] [B : Type] (message : TileMessage [Seq [TilePair [A] [B] ] ] )
      : TileMessage [Seq [A] ] =
    TileMessageBuilder .mk .build (message .context) (message .outcome) (
      (message .contents)
        .map (lambda pair --> pair .fst)
    )

end

