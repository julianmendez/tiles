
directive lean
import Soda.tiles.fairness.tool.TileMessage
import Soda.tiles.fairness.tile.ReceivedSigmaPTile


/**
 * This tile is a particular case of a 'ReceivedSigmaPTile' where the resource is a prediction
 * score.
 */

class PredictionPTile

  abstract
    p : Resource -> Measure

  zero : Measure = MeasureMod .mk .zero

  one : Measure = MeasureMod .mk .one

  normalize (m : Measure) : Measure =
    if (m == zero)
    then zero
    else one

  map_tile = MapTile .mk [Measure] [Measure] (normalize)

  accumulates_tile = AccumulatesTile .mk (p)

  apply (message : TileMessage [Seq [Agent] ] ) : TileMessage [Seq [Measure] ] =
    map_tile .apply (
      accumulates_tile .apply (message)
    )

end

