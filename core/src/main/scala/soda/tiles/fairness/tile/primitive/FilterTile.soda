
directive lean
import Soda.tiles.fairness.tool.TileMessage

/**
 * This takes a condition (predicate) and passes through only those elements that satisfy it, discarding all others
 * while preserving the original order.
 */

class FilterTile [A : Type]

  abstract
    phi : A -> Boolean

  apply (message : TileMessage [Seq [A] ] ) : TileMessage [Seq [A] ] =
    TileMessageBuilder .mk .build (message .context) (message .outcome) (
      (message .contents) .filter (phi)
    )

end

