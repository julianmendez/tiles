
directive lean
import Soda.tiles.fairness.tool.TileMessage


/**
 * This tile takes a sequence of triples (a, b, c), and returns a sequence with the first
 * component of each triple from the input.
 */

class UnzipTripleFstTile

  abstract

  get_fst [A : Type] [B : Type] [C : Type] (triple : TileTriple [A] [B] [C] ) : A =
    triple .fst

  apply [A : Type] [B : Type] [C : Type] (
      message : TileMessage [Seq [TileTriple [A] [B] [C] ] ] ) : TileMessage [Seq [A] ] =
    MapTile .mk [TileTriple [A] [B] [C] ] [A] (get_fst)
      .apply (message)

end

